// Copyright (C) 2007-2016  CEA/DEN, EDF R&D, OPEN CASCADE
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//

#ifndef __ATOMGEN_GEN__
#define __ATOMGEN_GEN__

#include "SALOME_Component.idl"
#include "SALOMEDS.idl"
#include "SALOMEDS_Attributes.idl"
#include "SALOME_Exception.idl"

module ATOMGEN_ORB
{
  interface Atom
  {
    string getName();
    double getX();
    double getY();
    double getZ();
  };

  interface Molecule
  {
    string getName();
    long getNbAtoms();
    Atom getAtom(in long theIndex);
  };

  typedef sequence<Molecule> MoleculeList;

  interface ATOMGEN_Gen : Engines::EngineComponent, SALOMEDS::Driver
  {
    /*!
      Set active study
     */
    void     setCurrentStudy(in SALOMEDS::Study theStudy);

    /*!
      Import atomic data from external XML file
     */
    MoleculeList importXmlFile(in string theFileName);

    /*!
      Export atomic data to external XML file
     */
    boolean  exportXmlFile(in string theFileName);

    /*!
      Perform action on the atomic data
     */
    MoleculeList processData(in MoleculeList theData);

    /*!
     Return the data (list of molecules) for given study
     */
     MoleculeList getData(in long studyID);
  };
};

#endif
